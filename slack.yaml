swagger: '2.0'
schemes:
  - https
host: slack.com
basePath: /api
info:
  description: A messaging app for teams
  termsOfService: 'https://slack.com/terms-of-service/api'
  title: Slack
  version: 1.0.0
externalDocs:
  url: 'https://api.slack.com/'
securityDefinitions:
  Oauth2c:
    authorizationUrl: 'https://slack.com/oauth/authorize'
    description: ''
    flow: accessCode
    scopes:
      admin: ''
      'channels:history': ''
      'channels:read': ''
      'channels:write': ''
      'chat:write:bot': ''
      'chat:write:user': ''
      client: ''
      'dnd:read': ''
      'dnd:write': ''
      'emoji:read': ''
      'files:read': ''
      'files:write:user': ''
      'groups:history': ''
      'groups:read': ''
      'groups:write': ''
      identify: ''
      identity.basic: ''
      'im:history': ''
      'im:read': ''
      'im:write': ''
      'mpim:history': ''
      'mpim:read': ''
      'mpim:write': ''
      'pins:read': ''
      'pins:write': ''
      'reactions:read': ''
      'reactions:write': ''
      'reminders:read': ''
      'reminders:write': ''
      'search:read': ''
      'stars:read': ''
      'stars:write': ''
      'team:read': ''
      'usergroups:read': ''
      'usergroups:write': ''
      'users.profile:read': ''
      'users.profile:write': ''
      'users:read': ''
      'users:write': ''
    tokenUrl: 'https://slack.com/api/oauth.access'
    type: oauth2
paths:
  /auth.test:
    get:
      description: Checks authentication and tells you who you are.
      operationId: authTest
      parameters:
        - description: Authentication token
          in: query
          name: token
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserObject'
      security:
        - Oauth2c:
            - identify
  /channels.history:
    get:
      description: Fetches history of messages and events from a channel.
      operationId: getChannelHistory
      parameters:
        - description: Channel to fetch history for.
          in: query
          name: channel
          required: true
          type: string
        - default: now
          description: Timestamp of the oldest recent seen message.
          in: query
          name: latest
          type: string
        - description: Timestamp of the latest previously seen message.
          in: query
          name: oldest
          type: string
        - default: 100
          description: 'Number of messages to return, between 1 and 1000.'
          in: query
          name: count
          type: number
        - in: query
          name: has_more
          type: boolean
        - in: query
          name: is_limited
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChannelsHistory'
  /channels.info:
    get:
      description: Gets information about a channel.
      operationId: getChannelInfo
      parameters:
        - description: Channel to fetch history for.
          in: query
          name: channel
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChannelWrapper'
  /channels.invite:
    get:
      description: Invites a user to a channel.
      operationId: sendChannelInvite
      parameters:
        - description: Channel to fetch history for.
          in: query
          name: channel
          required: true
          type: string
        - description: User to invite to channel.
          in: query
          name: user
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChannelWrapper'
  /channels.join:
    get:
      description: 'Joins a channel, creating it if needed.'
      operationId: joinChannel
      parameters:
        - description: Name of channel to join
          in: query
          name: name
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChannelWrapper'
  /channels.leave:
    get:
      description: Leaves a channel.
      operationId: leaveChannel
      parameters:
        - description: Channel to fetch history for.
          in: query
          name: channel
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OkObject'
  /channels.list:
    get:
      description: Lists all channels in a Slack team.
      operationId: listChannels
      parameters:
        - description: Don't return archived channels.
          in: query
          name: exclude_archived
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChannelsObject'
  /channels.mark:
    get:
      description: Sets the read cursor in a channel.
      operationId: markChannelRead
      parameters:
        - description: Channel to fetch history for.
          in: query
          name: channel
          required: true
          type: string
        - description: Timestamp of the most recently seen message.
          in: query
          name: ts
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OkObject'
  /channels.setPurpose:
    get:
      description: Sets the purpose for a channel.
      operationId: setChannelPurpose
      parameters:
        - description: Channel to fetch history for.
          in: query
          name: channel
          required: true
          type: string
        - description: The new purpose
          in: query
          name: purpose
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Purpose'
  /channels.setTopic:
    get:
      description: Sets the topic for a channel.
      operationId: setChannelTopic
      parameters:
        - description: Channel to fetch history for.
          in: query
          name: channel
          required: true
          type: string
        - description: The new topic
          in: query
          name: topic
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Topic'
  /chat.delete:
    get:
      description: Deletes a message.
      operationId: deleteMessage
      parameters:
        - description: Channel to fetch history for.
          in: query
          name: channel
          required: true
          type: string
        - description: Timestamp of the most recently seen message.
          in: query
          name: ts
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DeleteOk'
  /chat.postMessage:
    get:
      description: Sends a message to a channel.
      operationId: postMessage
      parameters:
        - description: Channel to fetch history for.
          in: query
          name: channel
          required: true
          type: string
        - description: >-
            Text of the message to send. See below for an explanation of
            formatting.
          in: query
          name: text
          required: true
          type: string
        - description: Name of bot.
          in: query
          name: username
          type: string
        - description: Change how messages are treated. See below.
          in: query
          name: parse
          type: string
        - description: Find and link channel names and usernames.
          in: query
          name: link_names
          type: string
        - description: Pass 1 to enable unfurling of primarily text-based content.
          in: query
          name: unfurl_links
          type: string
        - description: URL to an image to use as the icon for this message
          in: query
          name: icon_url
          type: string
        - description: emoji to use as the icon for this message. Overrides icon_url.
          in: query
          name: icon_emoji
          type: string
        - description: Structured message attachments.
          in: query
          name: attachments
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PostOk'
  /chat.update:
    get:
      description: Updates a message.
      operationId: updateMessage
      parameters:
        - description: Channel to fetch history for.
          in: query
          name: channel
          required: true
          type: string
        - description: >-
            Text of the message to send. See below for an explanation of
            formatting.
          in: query
          name: text
          required: true
          type: string
        - description: Timestamp of the most recently seen message.
          in: query
          name: ts
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChatUpdate'
  /emoji.list:
    get:
      description: Lists custom emoji for a team.
      operationId: listEmoji
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EmojiWrapper'
  /files.info:
    get:
      description: Gets information about a team file.
      operationId: getFileInfo
      parameters:
        - description: File to fetch info for
          in: query
          name: file
          required: true
          type: string
        - default: 100
          description: Number of items to return per page.
          in: query
          name: count
          type: number
        - default: 1
          description: Page number of results to return.
          in: query
          name: page
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FileObject'
  /files.list:
    get:
      description: Lists and filters team files.
      operationId: listFiles
      parameters:
        - description: File to fetch info for
          in: query
          name: file
          required: true
          type: string
        - description: Filter files created by a single user.
          in: query
          name: user
          type: string
        - description: Filter files created after this timestamp (inclusive).
          in: query
          name: ts_from
          type: string
        - default: now
          description: Filter files created before this timestamp (inclusive).
          in: query
          name: ts_to
          type: string
        - description: >-
            You can pass multiple values in the types argument, like
            types=posts,snippets.The default value is all, which does not filter
            the list.
          enum:
            - pdfs
            - zips
            - posts
            - images
            - snippets
            - gdocs
            - all
          in: query
          name: types
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FilesObject'
  /files.upload:
    get:
      description: Uploads or creates a file.
      operationId: uploadFiles
      parameters:
        - description: File contents via multipart/form-data.
          in: query
          name: file
          type: string
        - description: File contents via a POST var.
          in: query
          name: content
          type: string
        - description: Slack-internal file type identifier.
          in: query
          name: filetype
          type: string
        - description: Filename of file.
          in: query
          name: filename
          type: string
        - description: Title of file.
          in: query
          name: title
          type: string
        - description: Initial comment to add to file.
          in: query
          name: initial_comment
          type: string
        - description: Comma separated list of channels to share the file into.
          in: query
          name: channels
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FileObject'
  /groups.history:
    get:
      description: Fetches history of messages and events from a private group.
      operationId: getGroupHistory
      parameters:
        - description: Group to fetch history for.
          in: query
          name: channel
          required: true
          type: string
        - default: now
          description: Timestamp of the oldest recent seen message.
          in: query
          name: latest
          type: string
        - description: Timestamp of the latest previously seen message.
          in: query
          name: oldest
          type: string
        - default: 100
          description: 'Number of messages to return, between 1 and 1000.'
          in: query
          name: count
          type: number
        - in: query
          name: has_more
          type: boolean
        - in: query
          name: is_limited
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChannelsHistory'
  /groups.list:
    get:
      description: Lists private groups that the calling user has access to.
      operationId: listGroups
      parameters:
        - description: Don't return archived channels.
          in: query
          name: exclude_archived
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GroupsWrapper'
  /groups.mark:
    get:
      description: Sets the read cursor in a private group.
      operationId: markGroupRead
      parameters:
        - description: Group to fetch history for.
          in: query
          name: channel
          required: true
          type: string
        - description: Timestamp of the most recently seen message.
          in: query
          name: ts
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OkObject'
  /groups.setPurpose:
    get:
      description: Sets the purpose for a private group.
      operationId: setGroupPurpose
      parameters:
        - description: Group to fetch history for.
          in: query
          name: channel
          required: true
          type: string
        - description: The new purpose
          in: query
          name: purpose
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Purpose'
  /groups.setTopic:
    get:
      description: Sets the topic for a private group.
      operationId: setGroupTopic
      parameters:
        - description: Channel to fetch history for.
          in: query
          name: channel
          required: true
          type: string
        - description: The new topic
          in: query
          name: topic
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Topic'
  /im.history:
    get:
      description: Fetches history of messages and events from direct message channel.
      operationId: getImHistory
      parameters:
        - description: Direct message channel to fetch history for.
          in: query
          name: channel
          required: true
          type: string
        - default: now
          description: Timestamp of the oldest recent seen message.
          in: query
          name: latest
          type: string
        - description: Timestamp of the latest previously seen message.
          in: query
          name: oldest
          type: string
        - default: 100
          description: 'Number of messages to return, between 1 and 1000.'
          in: query
          name: count
          type: number
        - in: query
          name: has_more
          type: boolean
        - in: query
          name: is_limited
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChannelsHistory'
  /im.list:
    get:
      description: Lists direct message channels for the calling user.
      operationId: listIms
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ImsWrapper'
  /im.mark:
    get:
      description: Sets the read cursor in a direct message channel.
      operationId: markImsRead
      parameters:
        - description: Channel to fetch history for.
          in: query
          name: channel
          required: true
          type: string
        - description: Timestamp of the most recently seen message.
          in: query
          name: ts
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OkObject'
  /search.all:
    get:
      description: Searches for messages and files matching a query.
      operationId: searchAll
      parameters:
        - description: 'Search query. May contains booleans, etc.'
          in: query
          name: query
          required: true
          type: string
        - default: score
          description: Return matches sorted by either score or timestamp.
          enum:
            - timestamp
            - score
          in: query
          name: sort
          type: string
        - default: desc
          description: Change sort direction to ascending (asc) or descending (desc).
          enum:
            - desc
            - asc
          in: query
          name: sort_dir
          type: string
        - description: Pass a value of 1 to enable query highlight markers .
          in: query
          name: highlight
          type: string
        - default: 100
          description: Number of items to return per page.
          in: query
          name: count
          type: number
        - default: 1
          description: Page number of results to return.
          in: query
          name: page
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SearchAllObject'
  /search.files:
    get:
      description: Searches for files matching a query.
      operationId: searchFiles
      parameters:
        - description: 'Search query. May contains booleans, etc.'
          in: query
          name: query
          required: true
          type: string
        - default: score
          description: Return matches sorted by either score or timestamp.
          enum:
            - timestamp
            - score
          in: query
          name: sort
          type: string
        - default: desc
          description: Change sort direction to ascending (asc) or descending (desc).
          enum:
            - desc
            - asc
          in: query
          name: sort_dir
          type: string
        - description: Pass a value of 1 to enable query highlight markers .
          in: query
          name: highlight
          type: string
        - default: 100
          description: Number of items to return per page.
          in: query
          name: count
          type: number
        - default: 1
          description: Page number of results to return.
          in: query
          name: page
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SearchFilesObject'
  /search.messages:
    get:
      description: Searches for messages matching a query.
      operationId: searchMessages
      parameters:
        - description: 'Search query. May contains booleans, etc.'
          in: query
          name: query
          required: true
          type: string
        - default: score
          description: Return matches sorted by either score or timestamp.
          enum:
            - timestamp
            - score
          in: query
          name: sort
          type: string
        - default: desc
          description: Change sort direction to ascending (asc) or descending (desc).
          enum:
            - desc
            - asc
          in: query
          name: sort_dir
          type: string
        - description: Pass a value of 1 to enable query highlight markers .
          in: query
          name: highlight
          type: string
        - default: 100
          description: Number of items to return per page.
          in: query
          name: count
          type: number
        - default: 1
          description: Page number of results to return.
          in: query
          name: page
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SearchMessagesObject'
  /stars.list:
    get:
      description: Lists stars for a user.
      operationId: listStars
      parameters:
        - description: Show stars by this user. Defaults to the authed user.
          in: query
          name: user
          type: string
        - default: 100
          description: Number of items to return per page.
          in: query
          name: count
          type: number
        - default: 1
          description: Page number of results to return.
          in: query
          name: page
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/StarList'
  /users.list:
    get:
      description: Lists all users in a Slack team.
      operationId: listUsers
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UsersList'
definitions:
  UserObject:
    properties:
      ok:
        type: boolean
      team:
        type: string
      team_id:
        type: string
      url:
        type: string
      user:
        type: string
      user_id:
        type: string
      color:
        type: string
      deleted:
        type: boolean
      has_files:
        type: boolean
      id:
        type: string
      is_admin:
        type: boolean
      is_owner:
        type: boolean
      name:
        type: string
      profile:
        $ref: '#/definitions/Profile'
    type: object
  Profile:
    properties:
      email:
        type: string
      first_name:
        type: string
      image_192:
        type: string
      image_24:
        type: string
      image_32:
        type: string
      image_48:
        type: string
      image_72:
        type: string
      last_name:
        type: string
      phone:
        type: string
      real_name:
        type: string
      skype:
        type: string
    type: object
  ChannelsHistory:
    properties:
      has_more:
        type: boolean
      latest:
        type: string
      messages:
        items:
          $ref: '#/definitions/Message'
        type: array
      ok:
        type: boolean
    type: object
  Message:
    properties:
      is_starred:
        type: boolean
      text:
        type: string
      ts:
        type: string
      type:
        type: string
      user:
        type: string
      wibblr:
        type: boolean
    type: object
  ChannelWrapper:
    properties:
      channel:
        $ref: '#/definitions/Channel'
      ok:
        type: boolean
    type: object
  Channel:
    properties:
      created:
        type: number
      creator:
        type: string
      id:
        type: string
      is_archived:
        type: boolean
      is_channel:
        type: boolean
      is_general:
        type: boolean
      is_member:
        type: boolean
      last_read:
        type: string
      latest:
        $ref: '#/definitions/Latest'
      members:
        items:
          type: string
        type: array
      name:
        type: string
      purpose:
        $ref: '#/definitions/Purpose'
      topic:
        $ref: '#/definitions/Topic'
      unread_count:
        type: number
      unread_count_display:
        type: number
  Latest:
    properties:
      subtype:
        type: string
      text:
        type: string
      ts:
        type: string
      type:
        type: string
      user:
        type: string
    type: object
  Purpose:
    properties:
      creator:
        type: string
      last_set:
        type: number
      value:
        type: string
    type: object
  Topic:
    properties:
      creator:
        type: string
      last_set:
        type: number
      value:
        type: string
    type: object
  OkObject:
    properties:
      ok:
        type: boolean
    type: object
  ChannelsObject:
    properties:
      channels:
        type: array
        items:
          $ref: '#/definitions/Channel'
      ok:
        type: boolean
    type: object
  DeleteOk:
    properties:
      channel:
        type: string
      ok:
        type: boolean
      ts:
        type: string
    type: object
  PostOk:
    properties:
      channel:
        type: string
      ok:
        type: boolean
      ts:
        type: string
      message:
        $ref: '#/definitions/Message'
    type: object
  ChatUpdate:
    properties:
      channel:
        type: string
      ok:
        type: boolean
      text:
        type: string
      ts:
        type: string
    type: object
  EmojiWrapper:
    properties:
      ok:
        type: boolean
      emoji:
        $ref: '#/definitions/EmojiList'
    type: object
  EmojiList:
    properties:
      emoji:
        type: array
        items:
          $ref: '#/definitions/EmojiObject'
    type: object
  EmojiObject:
    properties:
      name:
        type: string
      url:
        type: string
    type: object
  FileObject:
    properties:
      file:
        $ref: '#/definitions/File'
      commentList:
        $ref: '#/definitions/CommentList'
      paging:
        $ref: '#/definitions/Paging'
      ok:
        type: boolean
    type: object
  File:
    properties:
      channels:
        $ref: '#/definitions/ChannelsObject'
      comments_count:
        type: number
      created:
        type: number
      editable:
        type: boolean
      external_type:
        type: string
      filetype:
        type: string
      groups:
        type: array
        items:
          type: string
      id:
        type: string
      ims:
        type: array
        items:
          type: string
      initial_comment:
        type: array
        items:
          type: string
      is_external:
        type: boolean
      is_public:
        type: boolean
      mimetype:
        type: string
      mode:
        type: string
      name:
        type: string
      permalink:
        type: string
      permalink_public:
        type: string
      pretty_type:
        type: string
      public_url_shared:
        type: boolean
      size:
        type: number
      timestamp:
        type: number
      title:
        type: string
      url:
        type: string
      url_download:
        type: string
      url_private:
        type: string
      url_private_download:
        type: string
      user:
        type: string
    type: object
  CommentList:
    properties:
      comments:
        type: array
        items:
          $ref: '#/definitions/CommentObject'
    type: object
  CommentObject:
    properties:
      id:
        type: string
      timestamp:
        type: string
      user:
        type: string
      comment:
        type: string
    type: object
  Paging:
    properties:
      count:
        type: number
      total:
        type: number
      page:
        type: number
      pages:
        type: number
    type: object
  FilesObject:
    properties:
      ok:
        type: boolean
      files:
        type: array
        items:
          $ref: '#/definitions/File'
      paging:
        $ref: '#/definitions/Paging'
    type: object
  GroupsWrapper:
    properties:
      ok:
        type: boolean
      groups:
        $ref: '#/definitions/GroupList'
    type: object
  GroupList:
    properties:
      groups:
        type: array
        items:
          $ref: '#/definitions/Group'
    type: object
  Group:
    properties:
      created:
        type: number
      creator:
        type: string
      id:
        type: string
      is_archived:
        type: boolean
      is_group:
        type: boolean
      members:
        items:
          type: string
        type: array
      name:
        type: string
      purpose:
        $ref: '#/definitions/Purpose'
      topic:
        $ref: '#/definitions/Topic'
    type: object
  ImsWrapper:
    properties:
      ims:
        type: array
        items:
          $ref: '#/definitions/Im'
    type: object
  Im:
    properties:
      created:
        type: number
      id:
        type: string
      is_user_deleted:
        type: boolean
      user:
        type: string
    type: object
  SearchAllObject:
    properties:
      ok:
        type: boolean
      query:
        type: string
      messages:
        type: array
        items:
          $ref: '#/definitions/MessageMatch'
      files:
        type: array
        items:
          $ref: '#/definitions/File'
    type: object
  MessageMatch:
    properties:
      type:
        type: string
      channel:
        $ref: '#/definitions/Channel'
      user:
        type: string
      username:
        type: string
      ts:
        type: string
      text:
        type: string
      permalink:
        type: string
      previous_2:
        $ref: '#/definitions/Message'
      previous:
        $ref: '#/definitions/Message'
      next:
        $ref: '#/definitions/Message'
      next_2:
        $ref: '#/definitions/Message'
    type: object
  SearchFilesObject:
    properties:
      ok:
        type: boolean
      query:
        type: string
      files:
        $ref: '#/definitions/FileMatchInfo'
    type: object
  FileMatchInfo:
    properties:
      total:
        type: number
      paging:
        $ref: '#/definitions/Paging'
      matches:
        type: array
        items:
          $ref: '#/definitions/File'
    type: object
  SearchMessagesObject:
    properties:
      ok:
        type: boolean
      query:
        type: string
      messages:
        $ref: '#/definitions/MessageMatchInfo'
    type: object
  MessageMatchInfo:
    properties:
      total:
        type: number
      paging:
        $ref: '#/definitions/Paging'
      matches:
        type: array
        items:
          $ref: '#/definitions/MessageMatch'
    type: object
  StarList:
    properties:
      ok:
        type: boolean
      items:
        type: array
        items:
          $ref: '#/definitions/StarredItem'
      paging:
        $ref: '#/definitions/Paging'
    type: object
  StarredItem:
    properties:
      type:
        type: string
      channel:
        type: string
      im:
        type: string
      group:
        type: string
      message:
        $ref: '#/definitions/Message'
      file:
        $ref: '#/definitions/File'
      comment:
        $ref: '#/definitions/CommentObject'
    type: object
  UsersList:
    properties:
      ok:
        type: boolean
      members:
        type: array
        items:
          $ref: '#/definitions/UserObject'
      cache_ts:
        type: number
    type: object
