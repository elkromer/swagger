XISUB-RASPE-NCERE-4031E-3JGPV
apt: 24.106.176.98
me: 10.0.1.109

* = give me the object at the following address.
& = tell me the address where the following object starts.

Reese Krome 2017-06-02 17:59:31 EDT
Thu: Desktop environment, email, chat, svn, and IDEs set up. Ran scripts to determine demos that still need to be created. Refreshed myself in Node and made an ezrand demo. I also talked to HR and got my employment forms squared away.

Fri: Made hash demo, started work on sshell demo in Node. Learned about the svn add, commit, checkout processes and committed ezrand and hash demos. Helped to construct and cable-manage Kathy's monitors.
[tag] [reply] [-] Comment 2 Reese Krome 2017-06-09 17:36:38 EDT
Mon: I went through each demo in IPWorksWS and ensured that the new websocketclient demos were functional. I test-installed our nodejs demos with new node v8 to see if there were errors.
Tue: I created a nodejs demo for sshell, continued testing our tools compatiblity with Node 7.9.0/8, learned concept of tunneling/reverse tunneling and started building SSHTunnel demo in node.
Wed: I finished the demos for sshtunnel, sshreversetunnel, hotp, totp, and checked compatibility of our tools in windows and linux after the Node 8 upgrade.
Thu: I fixed a printing error in totp demo node. Spencer helped me to set up and configure a CentOS ssh/sftp server and I tested two-factor authentication with google-authenticator and our tools totp/hotp.
Fri: Testing and coding sftp with 2fa, I identified a bug in .NET demos for totp and hotp and learned to write a BugZilla report. Wrote article on SFTP with 2FA. Set up sales computer and finished employment paperwork.
[tag] [reply] [-] Comment 3 Reese Krome 2017-06-16 17:32:04 EDT
Mon: Today I started to revise demos so that they may be called with command-line arguments. (totp, hotp, ezrand, hash, sshell, sshreversetunnel, and sshtunnel) I finished writing the KB article for 2fa with Sftp. I also helped Tyler to set up his build machine for the summer.
Tue: I continued revisions in the demos to add "usage" tips when calling from the command line. I read RFC pages on SNMP and started understanding SNMP Manager and Agent. At the end of the day I built a server case.
Wed: Today, I added examples to the usage tips for ezrand and hash. I worked on spencer's specifications for the output of sshtunnel, sshreversetunnel, hotp, totp, and hash. I looked at the maven source code for an smpp client, configured it to start listening to a specific port on execution, and tested its functionality with NUnit tests. 
Thu: I figured out the issue in creating an executable jar in intelliJ and added the OpenSmpp project and jarfile to apps. I wrote a batch script to start the Smpp server on testguy upon startup and changed the readme file to be accurate. I started on the nodejs demos for trapmgr and snmpwalk.
Fri: Finished demos for snmpwalk and trapmgr. I got started on performance testing our Sftp tools against those of SecureBlackBox.
[tag] [reply] [-] Comment 4 Reese Krome 2017-06-23 18:11:10 EDT
Mon: Today, I continued creating NUnit tests for performance tests between our IPWorksSSH Sftp component and SecureBlackBox's Sftp component. I also began simple testing to configure a meaningful output.
Tue: I finished creating the unit tests and competitively tested our components against SecureBlackBox with a variety of different encryption algorithms using three different local servers. I configured output to print to a csv file and shared the results with spencer. 
Wed: Today I configured a Win7 VM to run UDPPort and not save any data locally. I will use this to competitively test data transfer rates between our UDPPort component and SecureBlackBox's UDP Socket component on our gigabit pipe. 
Thu: Today we encountered data-loss issues while using UDPPort as the receiving end, so I spent the rest of the day creating a receiving end from Secure Black Box's socket class. 
Fri: Today, spencer helped me to finish the receiving end. I began optimizing the test cases I made to conform to the new receiver and started gathering test data from the first performance tests.
[tag] [reply] [-] Comment 5 Reese Krome 2017-06-30 17:45:58 EDT
Mon: Today Spencer and I ironed out the packet loss issues seen in the udp performance tests by changing configuration settings of the Udpport. I finished gathering test data and organized the results in a google sheet. I began reading though the documentation of SecureBlackBox's other components in preparation for more performance testing.
Tue: Today I set up the testing environment for ftps performance tests and wrote tests to compare our ftp component with SBB's FTPSClient component. I began gathering test data. 
Wed: Today I finished testing and gathering data for the ftps and IPWorksZip performance tests, and shared my results with spencer on google sheets. 
Thu: I began the day by formatting and updating the performance tests sheets to be up-to-date. I started reading up on JWS/JWE and began working on a .NET demo for JWT.
Fri: Today I finished the JWT demo and started working on the nodejs demo.
[tag] [reply] [-] Comment 6 Reese Krome 2017-07-07 17:55:10 EDT
Mon: I added aesthetic changes to .NET JWT demo, began coding a nodejs JWT demo and began converting the .NET c# to vb. Spencer gave me feedback on .NET demos and I continued those changes.
Tue: 4th of July
Wed: I finished converting the c# JWT demo into vb. I also finished writing a nodejs JWT demo, began working on a jcon JWT demo. 
Thu: Today I finished a jcon JWT demo, started on a php JWT demo, and revised usage tips on the nodejs demo.
Fri: I helped to move around some servers, finished the php JWT demo, and began working on delphi JWT demo.
[tag] [reply] [-] Comment 7 Reese Krome 2017-07-14 17:43:44 EDT
Mon: Today I finished PHP and Delphi demos for JWT. I began working on C Builder JWT Demo.
Tue: I continued working on C builder JWT Demo, discovered reset bug in component that is going to require a rebuild before I could finish bcb. I left early today to take my cat to the vet. 
Wed: Went back into every demo I have made for jwt and updated code to use the fixed reset function. Since we are having problems rebuilding c builder today, I stared on aspx demo.
Thu: I finished c builder, aspx demos and began working on android demo. Spencer helped me to prioritize the remaining JWT demos and I began working on a JSP demo.
Fri: Today I finished jsp, and linux JWT demos and started on cocoa demo.
[tag] [reply] [-] Comment 8 Reese Krome 2017-07-21 17:41:42 EDT
Mon: Today, I finished the JWT Cocoa demo and began working on IPC Cocoa PipeClient/PipeServer demos.
Tue: Spencer and I discovered two bugs in current IPC macOS build. I finished what I could of the PipeClient and PipeServer demos. I 
began helping spencer with a customer that had an issue with PipeExec and communicating between processes.
Wed: Figured out customer's issue, testconsole process killed by driver process before logging any data, and emailed spencer with my response. Tested C/C++ IPC Demos for Linux for any bugs, found nothing. 
Thu: Edited and updated Brenden's OneDrive section in the long InCloudStorage article. Spencer talked to me about his plan to allow end users to upload swagger files and we codegen to create client side code for the api that the swagger file describes. I began doing research on openapi, oauth, google apis, and playing around with the swagger online editor.  
Fri: Continued doing research and began using 3rd party swagger.yaml files for google api in swagger codegen to generate client side code for their api. Had success with getting an OAuth accessCode from google and using client side generated code provided by swagger.io,  but still running into issues getting google api to accept the code.
[tag] [reply] [-] Comment 9 Reese Krome 2017-07-28 17:59:30 EDT
Mon: Began looking at Google Calendar API and found a third party site  
that creates swagger files for OpenAPI companies. Used that swagger file to generate functional client side code with swagger codegen. 
Tue: Started looking at Amazon SNS and discovered that any calls to Amazon AWS require the signed request as a header, making client side code generation impractical. 
Wed: Started looking at Azure, had an issue with the developer account. Began testing our python code-generation script with Google calendar, success!
Thu: Wrote my own swagger file for PayPal Payments API, used swagger code gen and generated functional client side code. Some issues with code generation blocked testing with our python generator. Emailed Joe, Others about issues I have found with our codegen.
Fri: Created test project structure and wrote test cases for Google Calendar. Emailed Joe, Others about issues I have found with our codegen.
[tag] [reply] [-] Comment 10 Reese Krome 2017-08-04 17:55:54 EDT
Mon: Today, I tried getting our OAuth component to work with paypal, they turned out to not support the authorization part. Used WebForm component instead and it worked. Wrote test cases for paypal list/create payments, extended the swagger file to update payments and detail payments, began writing these test cases.
Tue: I finished test cases for paypal, fixed gcontacts swagger file, did not test, left early. Tmrw I will have to reinstall visual studio because I lost C# support do to uninstalling vs code.
Wed: Created a swagger file for PaymentExperienceAPI, got a working client side. Began integrating this with the PaymentsAPI to try to put together a server-side, code-generated Express Checkout demo. Success! Organized a supported products sheet for API integrator.
Thu: Wrote swagger for the rest of PaymentsAPI. Began testing individual components and had success with our client side. We are only blocked on OAuth now for this API.
Fri: Wrote a ton of test cases for Paypal Payments, wrote an explanation of their state machine, and wrote an email to Joe about the issues I have found with the generator these past few days.
[tag] [reply] [-] Comment 11 Reese Krome 2017-08-11 18:00:18 EDT
Mon: Today, I figured out why paypal oauth was not working and responded to Joe's email. I finished a rough swagger file for Invoices API and began testing.
Tue:Fixed errors in payments/invoices swagger files, renamed gcalendar test fixture, added invoicing state machine comments, and added invoicing unit tests.
Wed: Watched OAS 3.0 Webinar, continued troubleshooting GraphAPI Oauth. Left early.
Thu: Successfully tested calls to Graph API, since we do not have a work/school account for this the information we are getting back is truncated. Unfortunately, the api only describes responses to work/school accts so until we have one, testing will be a pain. Used APIGuru to find other swagger files and got a list to start testing.
Fri: Tested desired APIGuru swagger files, discovered that they are web-scraped and automatically written so they are not best to immediately generate client code. I will use these as templates instead. Put together information on api's we want to support & shared w/spencer and tyler. Started going through APIGuru generated swagger file for Git and removing errors.
[tag] [reply] [-] Comment 12 Reese Krome 2017-08-17 17:16:43 EDT
Mon: Today, I kept going through APIGuru swagger file for github, there are just too many issues here for me to spend more time on this. it is 17k+ lines of incorrect syntax and repeated code. Started writing swagger file for NASA api.
Tue: Kept going with nasa apis, knocked out swagger and wokring client side for APOD, mars rover, sounds, EPIC, EONET, and Earth. 
Wed: updated swagger to conform to Joe's oauth fix. updated unit tests to use the fix. finished nasa images, and started 
Thu: Last day, I wrote spencer a report on the state of API Integrator, wrote a swagger file for github's GitData and Repository API, found the solution to a few issues described in the report, and committed the last of my work.










Notes on github:
	Adding an existing repo for you to work on:
		fork repo into your acct
		git clone [forked repo]
		git add []
		git commit -m ""
		git push origin master (still need to create pull request to merge changes into [orig repo])
	They call them 'pull requests' because users that are not owners of the original repo can contribute to the original repo but only on an approved-changes basis. a user will fork your repo, make changes, push changes to their master branch and issue a request to YOU to add their changes to your master branch (this is a pull request)

Manual commit:
Create an index with entry
git update-index --add --cacheinfo 100644 83baae61804e65cc73a7201a7252750c76066a30 test.txt		
Write the staging area out to a tree object
write-tree


Licenses
SecureBlackbox .NET, Professional package, company in-house license with worldwide use rights and lifetime free upgrades

87AFCA477C535A16123CDED71693EBD238795EF77B0EAAECC4F732F18AB691A7DBE4252D0E3A3C271995EAFFD656153A118A18E36F96B0D70D7A56A89C23FFBB0D7EFFD5E602760009B0A5C951D6E7FB8FD2EAC27C4EE90EE85295CCB7443AB137B8A2205FD704491F03F42BDA10AF0A493FCC59C37C6DBD06A62DD27203EE24D01735702844F39127FC22E2B2B9175E401EEA3AF355F89DFADAF0B4F256357BE28D4139987AF35FB76D5C7B8452C4DDBA9D5C3D11D0AB4C13CAC0C428BBA0CAF51EA8513337E81CC61797897FD4204275B25051A21CCDAD10A597121EFFD5BA3BF09FB4AE0383B9D2DDBF906BC9796C85C55435EDC374F65914267D964EDE2E Sample calls: C# and VB.NET: SBUtils.Unit.SetLicenseKey("87AFCA477C535A16123CDED71693EBD238795EF77B0EAAECC4F732F18AB691A7DBE4252D0E3A3C271995EAFFD656153A118A18E36F96B0D70D7A56A89C23FFBB0D7EFFD5E602760009B0A5C951D6E7FB8FD2EAC27C4EE90EE85295CCB7443AB137B8A2205FD704491F03F42BDA10AF0A493FCC59C37C6DBD06A62DD27203EE24D01735702844F39127FC22E2B2B9175E401EEA3AF355F89DFADAF0B4F256357BE28D4139987AF35FB76D5C7B8452C4DDBA9D5C3D11D0AB4C13CAC0C428BBA0CAF51EA8513337E81CC61797897FD4204275B25051A21CCDAD10A597121EFFD5BA3BF09FB4AE0383B9D2DDBF906BC9796C85C55435EDC374F65914267D964EDE2E");
	


Callback File System 6.x, universal key

29FBFD885637C2337FDC31BEC38035224764F5958CCB988A8E135085DDC4F9156DFC25E5330202472D34AAE1CE7B1B7779B69A51A7E48F09B8C9F934E09734C996C7E4F9463FBC3522BF3CB5A23B1829F67B5869367FFC7562CB68F9461B3809D61B180D3A312A

	
BizCrypto for BizTalk, Professional package, Ultimate license

9AF7674D6AFBA2E2A50E2172E8EB33349BB714BBD6DB366EBD3E5662BFDC6B4B464A63751E176D11340EEC1E10E1B5B89CB52E1A6CB7AC00AEADFD471DFDBAF2EBB24B809AC392D339524DDE26590F6A91EC4AC3A0B2B5F2FDCDDFFA73BFF3B8E37F22BD4C921844B46B27F2A3E6C6136F5ECE85A54C5BB4940B5278459847891A257BE15A01024AC31009E57CDFF604B649B481E1B2E0F36380AD9E4BBBA01CBEE44E3BCF630A510B318494FED7B9B804782EFFCC8028C4352B6621738FEC5375CEDD69F96F08ACAE532664DE97D8BAC2DA69BF771162931252EA529CE98BC0BC1CB92B92138F416A9E4BED870F1D4E2400897036277B057ECC7E228C92B283
	


BizCrypto for SQL Server, Professional package, Ultimate license




ASP.NET - a platform that includes design-time objects and controls and a run-time execution context for developing and running applications on a Web server. It is part of the .NET framework and provides access to all the features of the framework. 




